name: CI

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install tfx-cli
      run: npm install -g tfx-cli

    - name: Increment Patch version
      run: |
        PATCH=$(cat Patch.txt)
        PATCH=$((PATCH + 1))
        echo $PATCH > Patch.txt

    - name: Update version based on repository tag
      run: |
        VERSION=$(cat Major.txt).$(cat Minor.txt).$(cat Patch.txt)
        jq '.version = "'$VERSION'"' vss-extension.json > temp.json && mv temp.json vss-extension.json

    - name: Update task.json version based on Major, Minor and Patch files
      run: |
        MAJOR=$(cat Major.txt)
        MINOR=$(cat Minor.txt)
        PATCH=$(cat Patch.txt)
        jq '.version.Major = '$MAJOR'' buildandreleasetask/TerraformDrift/task.json > temp.json && mv temp.json buildandreleasetask/TerraformDrift/task.json
        jq '.version.Minor = '$MINOR'' buildandreleasetask/TerraformDrift/task.json > temp.json && mv temp.json buildandreleasetask/TerraformDrift/task.json
        jq '.version.Patch = '$PATCH'' buildandreleasetask/TerraformDrift/task.json > temp.json && mv temp.json buildandreleasetask/TerraformDrift/task.json

    - name: Install dependencies
      run: |
        cd buildandreleasetask/TerraformDrift
        npm install
        npm install --save-dev jest-junit # Ensure Jest is installed
        chmod +x node_modules/.bin/jest  # Ensure Jest is executable
  
    - name: Run unit tests
      run: |
        cd buildandreleasetask/TerraformDrift
        npm test -- --reporters=default --reporters=jest-junit  # Generate JUnit report

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: buildandreleasetask/TerraformDrift/junit.xml
    
    - name: Build webpack
      run: |
        cd buildandreleasetask/TerraformDrift
        npm install
        webpack

    - name: Build Extension
      run: tfx extension create --manifest-globs vss-extension.json

    - name: Publish Extension
      run: tfx extension publish --manifest-globs vss-extension.json --token ${{ secrets.MARKETPLACE_PUSH }}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: vsix-artifact
        path: |
          **/*.vsix

    - name: Remove .vsix files
      run: rm -f *.vsix

    - name: Commit to master branch
      run: |
        git config --global user.email "subzone@live.com"
        git config --global user.name "Milenko Mitrovic"
        git remote set-url origin https://github.com/subzone/TerraformDrifter.git
        git add .
        whoami
        VERSION=$(cat Major.txt).$(cat Minor.txt).$(cat Patch.txt)
        git tag $VERSION
        git commit -m "Update version based on repository tag"
        git push origin HEAD:master
        git push origin --tags

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        VERSION: $(cat Major.txt).$(cat Minor.txt).$(cat Patch.txt)
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false